#1232. Check If It Is a Straight Line
class Solution():
    # def __init__(self,line):
    #     self.line = line
    def slope(self,x1,y1,x2,y2):
        if x2-x1 == 0:
            return float('inf')
        else:
            return (y2-y1)/(x2-x1)
    def checkStraightLine(self, coordinates: List[List[int]]) -> bool:
        if len(coordinates) < 3:
            # print('Less than 3 points ')
            return True
        slope = None
        same_slope = True
        for i in coordinates:
            for j in coordinates:
                if i == j:
                    continue
                # print(f'Slope of ({i[0]},{i[1]}) with ({j[0]},{j[1]}): ',end='')
                if slope == None:
                    slope = self.slope(i[0],i[1],j[0],j[1])
                    # print(f'{slope}')
                    continue
                if slope != self.slope(i[0],i[1],j[0],j[1]):
                    slope = self.slope(i[0],i[1],j[0],j[1])
                    # print(f'{slope} (differ)')
                    same_slope = False
                else:
                    slope = self.slope(i[0],i[1],j[0],j[1])
                    # print(f'{slope} (same)')
        return same_slope
case_a = [[1,1],[2,2],[3,3],[4,4],[5,5]]
case_b = [[0,1],[0,2],[0,3],[0,4],[0,5]]
case_c = [[1,1],[2,2],[2,1],[3,2],[3,1]]
case_d = [[1,3],[2,3],[3,3],[4,3],[5,3]]
case_e = [[-30,199],[339,456],[361,291],[169,227],[-192,-432],[-186,228],[-491,-236],[-403,68],[64,-345],[350,476],[459,-191],[296,445],[256,-132],[-125,-392],[-146,-191],[319,84],[458,224],[-499,436],[267,131],[-274,13],[-246,183],[-333,20],[93,-358],[-472,-178],[396,-434],[-1,128],[427,-59],[-110,-340],[261,-115],[15,-225],[96,114],[198,-135],[24,344],[-15,24],[-365,128],[370,-216],[-136,-74],[130,261],[205,-180],[-34,-415],[-103,-303],[497,-441],[340,319],[-219,249],[267,-39],[-115,139],[-384,-267],[77,-62],[-76,-318],[463,-97],[-197,-13],[138,-49],[13,6],[445,-424],[-103,246],[-458,160],[324,128],[-132,485],[7,110],[-495,-397],[-304,240],[-198,277],[104,-489],[334,473],[-196,-478],[-368,-269],[28,-409],[343,39],[-196,69],[340,-445],[16,163],[227,-63],[60,374],[-109,44],[409,-178],[-348,383],[-87,275],[65,345],[472,325],[351,-454],[-411,-18],[-103,225],[344,321],[-362,-100],[263,151],[-162,315],[-44,290],[-288,397],[-374,-268],[475,479],[-441,320],[401,-89],[-99,-215],[200,95],[-183,412],[229,-102],[378,-250],[-124,297],[241,-356],[331,286],[370,-209],[29,9],[14,472],[274,381],[-475,181],[-416,4],[182,-310],[-301,254],[251,445],[295,-396],[-408,-264],[356,-114],[390,-267],[440,-318],[-73,-337],[98,-7],[81,-275],[-294,-464],[31,309],[-95,-161],[230,-462],[185,4],[-392,197],[-376,329],[443,-185],[-403,230],[-239,89],[54,131],[-119,-159],[-101,334],[111,-364],[359,-103],[-42,14],[-90,-268],[-368,437],[-485,-279],[-382,260],[-167,336],[100,265],[415,-109],[97,-430],[-72,-275],[287,-140],[382,19],[256,215],[407,319],[222,-268],[-340,-141],[47,133],[-392,426],[351,168],[60,-431],[-298,-296],[-366,-232],[-40,-210],[471,-319],[195,187],[-75,-50],[44,226],[52,22],[-290,213],[-87,162],[66,-449],[-40,76],[431,-400],[268,-171],[186,-75],[25,497],[318,-266],[312,74],[-125,-426],[70,287],[355,158],[-498,-465],[318,265],[123,486],[-218,-234],[391,-4],[158,452],[-263,-408],[-241,304],[305,-237],[-369,24],[341,283],[-476,-174],[136,136],[-308,48],[43,-209],[-324,-495],[-125,205],[390,-181],[-347,-463],[-470,-231],[81,-490],[478,-496],[-124,-362],[158,-475],[94,115],[214,347],[-405,-385],[160,-121],[388,-371],[302,-5],[-56,-419],[-90,-425],[445,-285],[-18,99],[-354,-28],[-239,496],[312,-384],[378,-89],[53,-371],[310,-349],[-180,-224],[197,-286],[-184,24],[286,-235],[-175,-387],[-238,241],[42,-305],[236,-46],[349,396],[-494,208],[-263,-390],[-278,-443],[338,-254],[-275,-59],[173,283],[246,398],[-69,-220],[57,-331],[291,-219],[177,169],[-365,-330],[-189,-355],[-77,205],[78,-396],[-457,-346],[133,322],[389,29],[-394,84],[16,-432],[78,-482],[-350,-257],[475,-107],[134,362],[-90,-258],[-222,362],[-22,186],[-12,433],[490,291],[-260,-411],[-277,144],[-50,431],[73,-187],[420,-373],[-74,468],[459,232],[-430,-400],[-159,-474],[-189,358],[420,162],[-455,433],[90,-160],[106,397],[-174,-304],[-286,-298],[40,242],[-467,127],[495,-38],[-198,-174],[-375,474],[303,457],[496,148],[407,-147],[-266,52],[168,-330],[-143,-198],[144,-430],[373,-461],[266,223],[-483,-185],[-64,-11],[-113,-201],[306,-138],[47,-199],[-96,269],[-393,347],[-177,-448],[-251,312],[-114,328],[341,-455],[-465,322],[-281,161],[-131,-322],[-457,-266],[-172,29],[-277,276],[-305,19],[-478,-392],[-437,199],[-396,186],[-172,396],[-403,-62],[-46,224],[-356,50],[227,-256],[-112,-393],[290,45],[-165,113],[-193,-374],[424,334],[451,161],[435,-357],[-373,-67],[-183,-368],[180,-100],[326,-391],[169,-303],[-299,336],[162,-369],[219,415],[-350,485],[-101,130],[352,322],[208,-14],[-318,-451],[-215,-286],[494,-316],[-31,474],[469,-30],[-178,120],[-3,419],[-369,-141],[80,433],[-100,-97],[458,-111],[-96,114],[-193,-454],[-454,233],[352,390],[73,-277],[204,190],[-286,322],[-479,-118],[-126,145],[-444,103],[42,75],[-33,-120],[-150,139],[-139,59],[81,429],[-396,420],[-146,247],[20,55],[122,245],[-486,-460],[179,102],[-193,7],[275,-80],[366,327],[184,-337],[-56,-183],[364,-451],[-220,449],[433,-239],[-106,-339],[-360,-304],[-191,-238],[370,390],[-215,-79],[263,341],[97,-329],[-72,177],[-459,385],[323,-128],[16,-6],[-347,156],[52,258],[-374,-80],[361,201],[-127,-270],[-74,-412],[297,112],[471,-436],[-31,94],[-460,-335],[-39,-100],[151,-462],[199,322],[56,61],[21,-288],[-124,-142],[-412,-170],[-173,326],[-256,-500],[118,-248],[-423,175],[-211,-139],[-3,327],[469,-189],[363,407],[344,374],[-102,-464],[-401,154],[116,-425],[-50,127],[9,136],[153,-8],[373,209],[-84,-489],[453,-425],[104,485],[-465,242],[366,355],[-19,244],[365,191],[462,381],[-252,-451],[-26,358],[-382,456],[-229,403],[-238,240],[-169,245],[344,117],[278,-1],[-437,484],[-338,112],[421,326],[-150,-462],[-217,-284],[-293,71],[45,-171],[-468,-139],[223,-442],[281,-53],[424,98],[-165,-274],[253,-258],[225,-112],[-260,-481],[-357,495],[419,-406],[161,178],[-462,-314],[63,472],[185,-273],[412,-20],[-170,57],[-107,-17],[200,-371],[-172,418],[-175,157],[-62,1],[248,153],[484,131],[-404,220],[402,427],[-133,131],[346,-113],[99,-241],[374,-433],[-202,-16],[74,120],[-155,414],[-261,-265],[479,-439],[-210,250],[441,232],[-314,-57],[243,-484],[1,-240],[-90,-150],[-490,272],[-224,-180],[282,-149],[190,-432],[41,4],[-155,-389],[465,-102],[266,-234],[137,449],[37,327],[-171,452],[-474,247],[-383,-186],[295,156],[-164,-211],[62,-263],[-33,-12],[-414,-456],[-421,-183],[371,434],[15,436],[-221,-53],[224,263],[-209,-23],[259,167],[-170,-447],[477,-5]]

solution_a = Solution()
solution_b = Solution()
solution_c = Solution()
solution_d = Solution()
solution_e = Solution()

print(f'{case_a}:\n{solution_a.checkStraightLine(case_a)}')
print()
print(f'{case_b}:\n{solution_b.checkStraightLine(case_b)}')
print()
print(f'{case_c}:\n{solution_c.checkStraightLine(case_c)}')
print()
print(f'{case_d}:\n{solution_d.checkStraightLine(case_d)}')
print()
print(f'{case_e}:\n{solution_d.checkStraightLine(case_e)}')